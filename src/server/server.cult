(require "anon:boot--1")
(require "file:D:/Data/Clark/cult/cultlang/vscode-cult/src/server/notifications/server/logMessage.cult")

(require "file:D:/Data/Clark/cult/cultlang/vscode-cult/src/server/notifications/client/textDocument/didChange.cult")
(require "file:D:/Data/Clark/cult/cultlang/vscode-cult/src/server/notifications/client/textDocument/didClose.cult")
(require "file:D:/Data/Clark/cult/cultlang/vscode-cult/src/server/notifications/client/textDocument/didOpen.cult")
(require "file:D:/Data/Clark/cult/cultlang/vscode-cult/src/server/notifications/client/textDocument/didSave.cult")
(require "file:D:/Data/Clark/cult/cultlang/vscode-cult/src/server/notifications/client/textDocument/willSave.cult")
(require "file:D:/Data/Clark/cult/cultlang/vscode-cult/src/server/notifications/client/textDocument/willSaveUntil.cult")

(require "file:D:/Data/Clark/cult/cultlang/vscode-cult/src/server/notifications/client/exit.cult")
(require "file:D:/Data/Clark/cult/cultlang/vscode-cult/src/server/notifications/client/initialized.cult")

(require "file:D:/Data/Clark/cult/cultlang/vscode-cult/src/server/requests/client/initialize.cult")
(require "file:D:/Data/Clark/cult/cultlang/vscode-cult/src/server/requests/client/shutdown.cult")

(require "file:D:/Data/Clark/cult/cultlang/vscode-cult/src/server/requests/client/workspace/didChangeConfiguration.cult")
(require "file:D:/Data/Clark/cult/cultlang/vscode-cult/src/server/requests/client/workspace/executeCommand.cult")

(require "file:D:/Data/Clark/cult/cultlang/vscode-cult/src/server/requests/client/language/completion.cult")
(require "file:D:/Data/Clark/cult/cultlang/vscode-cult/src/server/requests/client/language/codeAction.cult")
(require "file:D:/Data/Clark/cult/cultlang/vscode-cult/src/server/requests/client/language/hover.cult")

(define handlers {
	"textDocument/didChange" didChange
	"textDocument/didClose" didClose
	"textDocument/didOpen" didOpen
	"textDocument/didSave" didSave
	"textDocument/willSave" willSave
	"textDocument/willSaveUntil" willSaveUntil
	"window/logMessage" logMessage
	"exit" exit
	"initialized" initialized

	"workspace/executeCommand" executeCommand
	"workspace/didChangeConfiguration" didChangeConfiguration

	"textDocument/completion" completion
	"textDocument/codeAction" codeAction
	"textDocument/hover" hover

	"initialize" initialize
	"shutdown" shutdown

	"$/cancelRequest" (function (data stdin) null)
})

(define loop (uv/loop))
(define stdout (uv/stdout loop))
(define stdin (uv/stdin loop))

(define pHandlers (uv/stream))

(uv/stream/data pHandlers (function (data stdin)
	(do
		(define sdata (string data))
		(define body  "")
		(while (lsp/body sdata body)
			(cond
				(== (string/length body) 0u64)
				(do
					(define res {"id" "0" "error" { "code" -32700 "message" "Parse Request Error"}})
					(uv/stream/write stdout (lsp/makeResponse (string res)))
				)
				(do
					(define request (json body))
					(define handler (map/get handlers (map/get request "method")))
					(cond (truth handler)
						(do
							(define context {
								"loop" loop
								"stdout" stdout
								"handlers" handlers
							})
							(handler context request)
						)
						(do
							(uv/stream/write stdout (lsp/makeResponse (string {"id" (map/get request "id") "error" { "code" -32601 "message" (fmt "No Such method %{0}" (map/get request "method"))}})))
						)
					)
				)
			)
		)
	)
))

(uv/stream/context stdin pHandlers)

(define oHandlers (uv/stream))

; (uv/stream/write oHandlers (function (data stdout)
;   (do
;     (uv/stream/read stdin)
;   )
; ))

(uv/stream/context stdout oHandlers)

(define main (function ()
	(uv/stream/read stdin)
	(uv/run loop)
))
